<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbnu.dao.OrderMapper">

    <!--
         数据表列字段与pojo类属性映射关系
         type:指定将查询的结果封装到哪个类pojo对象中
         id:指定一个唯一表示resultMap的值
      -->
    <resultMap type="com.hbnu.pojo.Order" id="orderRM">
        <id column="id" property="id"/>
        <result column="door_id" property="doorId"/>
        <result column="order_no" property="orderNo"/>
        <result column="order_type" property="orderType"/>
        <result column="pnum" property="pnum"/>
        <result column="cashier" property="cashier"/>
        <result column="order_time" property="orderTime"/>
        <result column="pay_time" property="payTime"/>
        <result column="pay_type" property="payType"/>
        <result column="price" property="price"/>

    </resultMap>
    <!-- 1.查询所有订单信息	 id值为对应接口中方法的名字
        resultMap:指定为resultMap标签的id值
     -->
    <select id="findAll" resultMap="orderRM">
        select * from tb_order
    </select>
    <!-- 2.新增订单信息 -->
    <insert id="addOrder">
        INSERT INTO tb_order(door_id,order_no,order_type,pnum,cashier,order_time,pay_time,pay_type,price)
        VALUES(#{doorId},#{orderNo},#{orderType},#{pnum},#{cashier},now(),now(),#{payType},#{price})
    </insert>


    <!--    根据id删除订单信息-->
    <delete id="deleteById">
        delete  from tb_order where id=#{id}
    </delete>
    <!--    根据id查询订单信息-->
    <select id="findOrderById" resultMap="orderRM">
         select * from tb_order where  id=#{id}
    </select>
<!--    更新订单信息-->
    <update id="updateById">
         update tb_order set door_id=#{doorId},order_no=#{orderNo},order_type=#{orderType}
                         ,pnum=#{pnum},cashier=#{cashier},order_time=#{orderTime},
                           pay_time=#{payTime},pay_type=#{payType},price=#{price} where id=#{id}
    </update>





</mapper>